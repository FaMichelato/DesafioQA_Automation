name: CI/CD - Testes Automatizados

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  test-api:
    name: Testes API com Playwright
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./api-playwright
        run: npm install

      - name: Run API tests
        working-directory: ./api-playwright
        run: npx playwright test

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-playwright-report
          path: ./api-playwright/test-results

  test-frontend:
    name: Testes Frontend E2E com Playwright + Cucumber
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./front-playwright-cucumber
        run: npm install

      - name: Run Frontend tests
        working-directory: ./front-playwright-cucumber
        run: npx cucumber-js --require support/custom-world.js --require support/hooks.js --require steps/*.js features

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: front-playwright-cucumber-report
          path: ./front-playwright-cucumber/reports

  test-mobile:
    name: Testes Mobile com Appium + Robot Framework
    runs-on: ubuntu-latest

    services:
      appium:
        image: appium/appium
        ports:
          - 4723:4723

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: ./appium-tests
        run: |
          python -m pip install --upgrade pip
          pip install robotframework
          pip install robotframework-appiumlibrary
          pip install Appium-Python-Client

      - name: Run Mobile tests
        working-directory: ./appium-tests
        run: robot tests/

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-tests-report
          path: ./appium-tests/report.html
